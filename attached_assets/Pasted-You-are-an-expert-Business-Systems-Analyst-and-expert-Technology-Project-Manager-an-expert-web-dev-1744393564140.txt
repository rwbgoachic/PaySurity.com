You are an expert Business Systems Analyst, and expert Technology Project Manager, an expert web developer, an expert Mobile app developer, and an expert Solutions Architect, and an expert in FinTech operations/ compliance for digital payments. In relation to humans’ IQ, your IQ level is 2000. 
Testing
Testing for Launch/ Public view/ Public deployment: Run all pieces of software we have built as part of PaySurity.com suite of software, through detailed end to end tests. Use the automated tests we have built so far wherever needed. As you go along, identify/ find any opportunities for creating more automated tests i.e. to create automated tests for functionalities that we don’t already have the automated tests for. Create automated tests for the newly identified opportunities, run a test to ensure that the Automated tests are running fine, and are identifying any issues. Create a dummy issue to check that the automated tests are running fine and catching any errors/ broken items. Report to me when you have completed the creation and test-run of those automated tests. Then re-run all end-to-end tests again, and report to me your findings. Then, without asking me, simply start fixing any and all errors you may have found and complete any unfinished tasks you may have identified. Repeat this cycle, till there are no errors or pending tasks left. Do not stop for my input till we have zero errors and or pending tasks throughout the PaySurity.com system. 

System security/ Hacking: You are an expert hacker and expert in IT/ Cyber/ Systems Security. Try to hack this system, report any vulnerabilities, and fix them. Then report to me that all possible vulnerabilities have been  thoroughly tested, and if the system is 100% secure against any hacking.

Admin Dashboard
Give me a “Super Admin” role, Give me a Super-admin Dashboard with:
1.	A link to navigate to a new page where I can view, create and manage users of the system. I should be able to add Sub-super Admins. Sub Super Admins will have the same authorities and their own Sub Super Admin dashboard, as me, except that they cannot delete me/ my access. 
2.	A Link for Site Analytics, that will take me to a new page to view Google analytics for site’s analytics reports. Deploy Google Analytics, if not already done.
3.	A link to navigate to the list of automated tests, 
a.	Within the Automated tests. 
i.	Give me the ability to run each one of them individually, or all of them or a few selected ones, and view the test results.
4.	Link to view and or edit or add new products and adjust the Pricing of our products.
5.	Customers Link: Will take me to a new page, where all existing (currently active), and old customers should be displayed in a table form, with their info displaying e.g. Contact Name, Company Name, email address, phone number, Country of origin (derive from contact phone number), Currently Active or Inactive. Our Product/ services/ Package bought (use multiple lines within each record with line brakes, if a customer has purchased more than one item from us. Keep the newest on top.  
6.	Documentation Link: The link should take me a page where I can view/ download the following Documents:
Deeply analyze our Softwares that we have built so far. Create well-organized excel sheets for the following documents, and create a link for each on the Super-admin page/ dashboard, that I can use to download them. You will keep these files updated by updating them according to any changes or updates to our softwares as we go along. You will maintain a sheet in it that will explain as to what was updated in that document, and when etc (i.e. version control). 
1.	A BRD- Crete an Executive summary. Business Requirements Document: explaining the business side of our products/ services. Research, and analyze competitors, and mention our Unique Sales Propositions.
2.	An FRD- Functional Requirements document: Explaining how the Functional requirements map the Business requirements. Include various user-journeys/ flows in plain English. Include screen shots of each flow, with the relevant UI elements encircled/ highlighted for the reader of the document to follow. Add and maintain a column, identifying as to what processes are automated and which ones are manual, so we can try to automate as much as we can, going forward. 
3.	Create a Technical document that is easy to understand and follow for a human who is a web developer and or a mobile app developer. The document should be very detailed and intuitive. Give an intro of the technology stack used. Create headings, and subheadings for each piece of software we have built. Wherever needed, give the exact code and UI screen shots. Give separate detailed portion of the document with any and all integrations, another portion as a list for all APIs, their purpose, where in our software they are used, what is their purpose, who do they help us integrate with.
a.	Give tabular example of affiliate and ISO commission structures. Keep them as separate calculation pieces of calculation-software. Configurable for bulk, or individual affiliates and ISOs. And affiliate can also be an ISO or vice versa. In this case, their calculation-software will be one single calculation software. 
b.	Create and maintain a separate sheet in that excel document for all reports that are generated anywhere in the softwares. Their source code/ tables, target tables and the related meta-data. This will help the human developer better understand the landscape.
4.	Create and maintain a separate sheet in that excel document that gives me a view of pending work. Include a column for why it is pending. for Anything that you are able to do, but is pending, assign it to yourself and prioritize completing it without me needing to remind you/ check/ intervene.  
5.	Create and maintain a separate sheet in that excel document that gives me a view of pending work that is pending due to it needing me to take a decision, or provide you answers to your questions, or give you anything else that you may need from me e.g. an API details that we need to get from an external system.
6.	Training Document:
Create a separate link in the admin dashboard to create and maintain a separate sheet in that excel document that Explains in the minutest of details, the steps taken by each user to achieve a certain goal. e.g. Merchant Onboarding. End to end process with references to UI, including actual screen shots encircling/ referencing the relevant UI elements. Imagine that this training document will be used by a 5 year old human, so be detailed, simple, and clear.
7.	Give me link to the admin-panel page and the credentials to login into it so I can permanently save it for me. 
8.	

Continue what you're working on right now. When you're finished with it, for all the software we have built so far for paysurity.com, Identify pending tasks, redundancies/ duplications of flow, or processes, latency/ loading time, identify any opportunities to create automated tests, then create those automated tests, and conduct a full end to end test of all the software pieces we have built so far, ideally, using maximum automation for testing. Then update the documentation in the admin dashboard accordingly. Ensure that all our UI flows are user friendly/ intuitive. If not, fix them accordingly. Ensure that all our assets are ADA-compliant (Americans with Disabilities Act). Cleanup the code. Get rid of only the unnecessary latency/ late-loading factors. And confirm to me if we are 100% launch-ready for public view of our systems. The asset should load for the users with an HTTPS prefix in the URL address bar. I expect you to remember all our previous conversations without the need for me to repeat. 
